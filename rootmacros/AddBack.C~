void AddBack()
{

 gROOT->SetStyle("Plain");
  gStyle->SetOptStat(0);
  TStyle * Sty = (TStyle*)gROOT->FindObject("MyStyle");
  if(!Sty)
    {
      Sty = new TStyle("MyStyle","MyStyle");
    }
  Sty->SetOptTitle(0);
  Sty->SetOptStat(0);
  //Sty->SetPalette(8,0);
  Sty->SetCanvasColor(10);
  Sty->SetCanvasBorderMode(0);
  Sty->SetFrameLineWidth(3);
  Sty->SetFrameFillColor(10);
  Sty->SetPadColor(10);
  Sty->SetPadTickX(1);
  Sty->SetPadTickY(1);
  Sty->SetPadBottomMargin(.17);
  Sty->SetPadTopMargin(.03);
  Sty->SetPadLeftMargin(.17);
  Sty->SetPadRightMargin(.01);
  Sty->SetHistLineWidth(3);
  Sty->SetHistLineColor(kBlack);
  Sty->SetFuncWidth(3);
  Sty->SetFuncColor(kRed);
  Sty->SetLineWidth(3);
  Sty->SetLabelSize(0.06,"xyz");
  Sty->SetLabelOffset(0.02,"y");
  Sty->SetLabelOffset(0.02,"x");
  Sty->SetLabelColor(kBlack,"xyz");
  Sty->SetTitleSize(0.06,"xyz");
  Sty->SetTitleOffset(1.3,"y");
  Sty->SetTitleOffset(1.1,"x");
  Sty->SetTitleFillColor(10);
  Sty->SetTitleTextColor(kBlack);
  Sty->SetTickLength(.03,"xz");
  Sty->SetTickLength(.02,"y");
  Sty->SetNdivisions(5,"x");
  Sty->SetNdivisions(10,"yz");
  Sty->SetEndErrorSize(0);
  gROOT->SetStyle("MyStyle");
  gROOT->ForceStyle();

  TFile *in = new TFile("../sort.root");
  if(!in)
    {
      cout <<"No data" << endl;
      return;
    }

  gROOT->cd();


  TCanvas * mycan = (TCanvas*)gROOT->FindObject("mycan");
  if(!mycan)
    {
      mycan = new TCanvas("mycan","",1600,600);
      mycan->Divide(2,1,0.0000001,0.0000001);
    }


  mycan->cd(1);

  gPad->SetLogy();
  gPad->SetRightMargin(0.05);

  TH1I *Pies = (TH1I*)in->Get("pies/cal/PC_30")->Clone("Pie");

  Pies->Rebin(2);
  Pies->Draw();
  Pies->GetXaxis()->SetRangeUser(0,10);
  
  TH1I *Pies_Add = (TH1I*)in->Get("pies/cal/PC_30_AfterAddback")->Clone("Pie_Add");

  Pies_Add->Draw("Same");
  Pies_Add->SetLineColor(kBlue);
  Pies_Add->Rebin(2);
  
  TH1I *Pies_NoAdd = (TH1I*)in->Get("pies/cal/PC_30_AfterAddback_NoNeighbor")->Clone("Pie_NoAdd");

  //  Pies_NoAdd->Draw("Same");
  //Pies_NoAdd->SetLineColor(kRed);
  //Pies_NoAdd->Rebin(2);

  TLegend *myleg = new TLegend(0.2,0.6,0.5,0.9);
  myleg->AddEntry(Pies,"Calibrated","l");
  myleg->AddEntry(Pies_Add,"AddBack","l");
  //myleg->AddEntry(Pies_NoAdd,"No Neighbors","l");

  myleg->SetBorderSize(0);
  myleg->Draw();


  TLatex *mytex = new TLatex();
  mytex->DrawLatexNDC(0.25,0.9,"Pies");

  mycan->cd(2);
  gPad->SetLogy();
    gPad->SetRightMargin(0.05);

  TH1I *Rings = (TH1I*)in->Get("rings/cal/RC_30")->Clone("Ring");

  Rings->Rebin(2);
  Rings->Draw();
  Rings->GetXaxis()->SetRangeUser(0,10);
  Rings->GetXaxis()->CenterTitle();
  Rings->GetYaxis()->SetTitle("Counts");
  Rings->GetYaxis()->CenterTitle();
  
  TH1I *Rings_Add = (TH1I*)in->Get("rings/cal/RC_30_AfterAddback")->Clone("Ring_Add");

  Rings_Add->Draw("Same");
  Rings_Add->SetLineColor(kBlue);
  Rings_Add->Rebin(2);
  TH1I *Rings_NoAdd = (TH1I*)in->Get("rings/cal/RC_30_AfterAddback_NoNeighbor")->Clone("Ring_NoAdd");

  //Rings_NoAdd->Draw("Same");
  //Rings_NoAdd->SetLineColor(kRed);
  //Rings_NoAdd->Rebin(2);
  mytex->DrawLatexNDC(0.25,0.9,"Rings");


  return;
}
